services:
  # Servicio de Base de Datos PostgreSQL
  postgres-db:
    image: postgres:14-alpine
    container_name: postgres_db_inventario
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Servicio del Backend (API)
  backend:
    container_name: backend_inventario
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  # El proxy Nginx que es el punto de entrada
  nginx-proxy:
    container_name: nginx_proxy_inventario
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - app-network

# Definición de volúmenes y redes
volumes:
  postgres_data:
    driver: local
networks:
  app-network:
    driver: bridge